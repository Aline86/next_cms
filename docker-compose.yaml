services:
  php:
    build:
      context: ./
      dockerfile: ./api/Dockerfile.backend
    container_name: php
    expose:
      - "9000"

    depends_on:
      - mysqldb

    env_file: .env
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USERNAME=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - PHP_UPLOAD_TMP_DIR=/var/www/html/tmp
    volumes:
      - ./tmp:/var/www/html/tmp
      - ./shared-uploads:/var/www/html/api/uploadfile
    networks:
      - next

  mysqldb:
    image: mysql:8.0.33

    container_name: mysql
    expose:
      - "3306"
    ports:
      - 3306:3306
    environment:
      - MYSQL_DATABASE=${DB_NAME}
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
    command: --sql-mode="NO_ENGINE_SUBSTITUTION"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - next
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      retries: 10
      interval: 3s
      timeout: 30s

  phpmyadmin:
    image: phpmyadmin:5.2.1
    container_name: phpmyadmin
    restart: always
    ports:
      - "8082:80"
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: ${DB_PASSWORD}
    depends_on:
      - mysqldb
    networks:
      - next

  nextjs:
    build:
      context: ./
      dockerfile: ./front/Dockerfile.frontend
    env_file: .env
    container_name: nextjs
    restart: always
    command: npm run dev
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=1
      - NEXT_WEBPACK_USEPOLLING=1
      - NEXT_PUBLIC_SECRET=${NEXT_PUBLIC_SECRET}
      - NEXT_PUBLIC_VITE_REACT_APP_BACKEND_URL=${NEXT_PUBLIC_VITE_REACT_APP_BACKEND_URL}
      - NEXT_PUBLIC_VITE_REACT_APP_FRONTEND_IMAGE_URL=${NEXT_PUBLIC_VITE_REACT_APP_FRONTEND_IMAGE_URL}
    ports:
      - "3000:3000"
    volumes:
      - ./front:/usr/src/app
      - ./shared-uploads:/usr/src/app/api/uploadfile/
    networks:
      - next

  front:
    image: nginx:latest
    container_name: front
    restart: unless-stopped

    ports:
      - "80:80" # Expose NGINX on port 80
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf # NGINX config for reverse proxy
      - ./front:/usr/share/nginx/html # Mount the Next.js app files
      - ./shared-uploads:/usr/share/nginx/html/api/uploadfile/
    depends_on:
      - php
      - nextjs
    networks:
      - next
    command: nginx -g 'daemon off;'

volumes:
  mysql-data:
  front:
  shared-uploads:
networks:
  next:
    name: next
    driver: bridge
